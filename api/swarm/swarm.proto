syntax = "proto3";

// TODO: figure out what this should be and how to best
// structure the project
option go_package = "github.com/dominichamon/swarm/api/swarm";

package swarm;

message StatusRequest {
}

message StatusResponse {
  string ip = 1;
  string hostname = 2;
  uint64 total_ram = 3;
  uint64 free_ram = 4;
}

message RunRequest {
  // TODO: fetch
  string cmd = 1;
  uint64 ram = 2;
}

message RunResponse {
  int64 job_id = 1;
}

message JobRequest {
  int64 id = 1;
}

message JobResponse {
  int64 start_time = 1;
  bool exited = 2;
  bool success = 3;
  RUsage rusage = 4;
}

message JobsRequest {
}

message JobsResponse {
  repeated int64 id = 1;
}

message Timeval {
  int64 sec = 1;
  int64 usec = 2;
}

message RUsage {
  Timeval utime = 1;
  Timeval stime = 2;
  int64 maxrss = 3;
}

enum LogType {
  BOTH = 0;
  STDOUT = 1;
  STDERR = 2;
}

message LogsRequest {
  int64 job_id = 1;
  LogType type = 2;
}

message LogsResponse {
  LogType type = 1;
  string chunk = 2;
}

service Worker {
  rpc Status(StatusRequest) returns (StatusResponse) {}
  rpc Run(RunRequest) returns (RunResponse) {}
  rpc Job(JobRequest) returns (JobResponse) {}
  rpc Jobs(JobsRequest) returns (JobsResponse) {}
  rpc Logs(LogsRequest) returns (stream LogsResponse) {}
}
